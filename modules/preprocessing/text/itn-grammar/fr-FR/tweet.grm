import '../../fst-thrax-grammars/common/byte.grm' as bytelib;
import '../../fst-thrax-grammars/common/chars.grm' as chars;

star = Optimize[bytelib.kBytes*];
space = Optimize[" "];

lb = Optimize["[BOS]" | space];
rb = Optimize[space | "[EOS]"];

a_z0_9 = Optimize[bytelib.kLower | bytelib.kDigit];

huit = Optimize["huit"|"8"];

underscore = Optimize[("underscore" "s"?) | ("tiret" "s"? (space|" du ") ("bas"|huit))];
arobase = Optimize[("arobase" "s"?) | "at"];

symb_apostrophe = Optimize["'"];
symb_hyphen = Optimize["-"];
symb_underscore = Optimize["_"];
symb_arobase = Optimize["@"];

convert_apostrophe = Optimize[(symb_apostrophe : "")];
convert_accent_a = Optimize[(("À"|"à"|"ä"|"Ä"|"â"|"Â") : "a")];
convert_accent_e = Optimize[(("Ë"|"Ê"|"È"|"É"|"é"|"è"|"ë"|"ê") : "e")];
convert_accent_i = Optimize[(("Ï"|"Î"|"ï"|"î") : "i")];
convert_accent_o = Optimize[(("Ô"|"Ö"|"ô"|"ö") : "o")];
convert_accent_u = Optimize[(("Ù"|"Û"|"Ü"|"ù"|"û"|"ü") : "u")];
convert_accent_y = Optimize[(("Ÿ"|"ÿ"|"ŷ") : "y")];
convert_accent_c = Optimize[(("Ç"|"ç") : "c")];
convert_accent_oe = Optimize[(("Œ"|"œ") : "oe")];
convert_accent_ae = Optimize[(("Æ"|"æ") : "ae")];
convert_hyphen = Optimize[(symb_hyphen : "")];
convert_special_char_tweet = Optimize[(convert_accent_ae|convert_accent_oe|convert_apostrophe|convert_accent_a|convert_accent_e|convert_accent_i|convert_accent_o|convert_accent_u|convert_accent_y|convert_accent_c|convert_hyphen)];

authorized_char_tweet = Optimize[(a_z0_9|convert_special_char_tweet|symb_underscore)+];

tweet = Optimize[("twitter"|"tweet") "s"?];
tweet_of_to = Optimize[("de"|"à")];

left_context_tweet = Optimize[lb tweet space (tweet_of_to space)?];
right_context_tweet = Optimize["[EOS]"];

########################################## Transducer ##########################################

tr_underscore = Optimize[underscore : symb_underscore];

tr_arobase = Optimize[arobase : symb_arobase];
del_space = Optimize[space : ""];

tr_tweet = Optimize[tr_arobase (del_space|authorized_char_tweet)+];
tr_tweet_input = Optimize[Project[tr_tweet, 'input']];

################################################################################################



########################################### Rewrite ############################################

#symbols input are normalized first else each chars from symbols are converted in authorized_char_tweet...

rw_symbols = Optimize[CDRewrite[tr_underscore, left_context_tweet tr_tweet_input, rb, star, 'sim', 'obl']];
rw_tweet = Optimize[CDRewrite[tr_tweet, left_context_tweet, right_context_tweet, star, 'sim', 'obl']];

################################################################################################



############################################ Export ############################################

export MAIN = Optimize[rw_symbols
		     @ rw_tweet];

################################################################################################

